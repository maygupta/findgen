c
params
params["subgroup_id"]
c
params["subgroup_id"]
params
c
user_subgroup_id
params
c
users.to_json(include: :subgroup)
users = users.includes(:subgroup)
users.to_json(include: :subgroup)
c
users = users.includes(:subgroup)
c
params
current_client
current_user.client
current_user
c
@group.user
@group
n
group_params
params
c
params
c
params[:rep_phone_number]
params
create_params
n
c
n
params
c
n
exit
error
n
params
create_params
c
params
c
params[:booking_status]
@bookings
n
status
n
c
n
c
n
booking.status
n
c
params
s
booking_params
n
booking
c
n
booking
c
params
c
params
c
 booking.rep
n
c
 params[:booking]
params[:booking][:employee_id]
c
cc
c
booking.operator = Operator.where(:vendor_id => booking.vendor_id).sample
Operator.where(:vendor_id => booking.vendor_id).sample.id
Operator.where(:vendor_id => booking.vendor_id).sample
Operator.where(:vendor_id => booking.vendor_id)
n
booking.operator
c
DateTime.parse(booking.start_date.to_s + "T" + booking.time_in + "+05:30")
booking.start_date.to_s
booking.start_date
booking.start_date + "T" + booking.time_in + "+05:30"
c
nn > dd
dd =DateTime.parse("2016-04-19" + "T" + d.time_in + "+05:30")
nn > dd
nn = 1.day.from_now
net_date
dd =DateTime.parse(d.start_date.to_s + "T" + d.time_in + "+05:30")
dd =DateTime.parse(d.start_date.to_s + "T" + d.time_in)
dd
d
d.time
dd =Date.parse(d.start_date.to_s + "T" + d.time_in)
Date.parse(d.start_date.to_s + "T" + d.time_in).to_s
Date.parse(d.start_date.to_s + "T" + d.time_in)
Date.parse(d.start_date.to_s)
Date.parse(d.start_date.to_s + d.time_in.to_s)
Date.parse(d.start_date.to_s + d.time_in)
Date.parse(d.start_date.to_s)
Date.parse(d.start_date)
Date.parse
net_day > d.start_date
net_day = 1.day.from_now 
1.day.from_now
1.day_from_now
d.time_in
d.start_date
d = Booking.where(:status => "cancelled")[0]
d.start_date
d
b
1.day.from_now
Date.today.to_time
Date.today
1.day
day
now
1.day
1.day.from_now
Time.now + "00:12:30"
Time.now
d = Booking.where(:status => "cancelled")[0].start_date
c
n
spoc_ids
n
c
params[:status]
Booking.where(:status => params[:status])
n
spoc_ids
c
SpocToApproverMapping.where("approver1_id = ? or approver2_id = ?", current_user.id,current_user.id).pluck(:spoc_id)
spoc_ids.map {|x| x.spoc_id}
spoc_ids.each {|x| x.spoc_id}
spoc_ids.pluck[:spoc_id]
spoc_ids
n
c
params[:current_client_id].first.first
params[:current_client_id].first
params
c
exit
c
params
map
n
map
c
params
@client_id
 User.where(:client_id => @client_id)
c
User.create(:name => "Spoc", :email => "spoc@tcs.com", :encrypted_password => "test", :role_type => "spoc", :client_id => 1)
User.create(:name => "Approver2", :email => "approver2@tcs.com", :encrypted_password => "test", :role_type => "approver", :client_id => 1)
User.create(:name => "Approver", :email => "approver@tcs.com", :encrypted_password => "test", :role_type => "approver", :client_id => 1)
c.save
c.balance = 0
c = Client.first
Client.first
 User.where(:client_id => @client_id)
 User.where(:client_id => @client_id, :role_type => "spoc")
User.all
@spocs
c
n
 SpocToApproverMapping.all
cn
c
params
c
params
c
params
c
params
c
@client_id
n_id
n
c
n
@spocs
n
c
params
@spocs
n
c
booking_params[:actual_days].to_i * per_day_cost(booking.lisp, booking.kva)
booking_params[:actual_days].to_i
booking_params[:actual_days]
per_day_cost(booking.lisp, booking.kva)
booking_params[:actual_days]*per_day_cost(booking.lisp, booking.kva)
booking.cost
n
c
exception
n
c
params
booking_params
c
params
c
end_hours.to_i
start_hours.to_i
start_hours
days
end_hours
n
self.time_out
self.time_in
start_hours
n
c
(end_date - start_date + 1).to_i
(end_date - start_date + 1)
(end_date - start_date + 1).inspect
(end_date - start_date + 1).to_day
(end_date - start_date + 1)
(end_date - start_date + 1).to_s
end_date - start_date + 1
end_date
start_date
c
self.start_date
self.end_date - self.start_date
self.start_date
self.end_date
self.end_date - self.end_date
self.end_date - self.start_date
Date.parse(self.start_date.to_s)
self.start_date.to_s
self.start_date
c
booking
c
Booking.all.map{|x|[x.start_date,x.end_date]}
Booking.all.map{|x|[x.start_date,x.end_ate]}
Booking.all
booking
booking.end_date = params[:booking][:end_date]
params[:booking][:start_date]
booking
exit
